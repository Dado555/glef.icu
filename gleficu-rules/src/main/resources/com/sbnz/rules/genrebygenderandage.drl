package com.sbnz.templates;
import java.util.Set;
import com.sbnz.gleficu.model.facts.*;
import com.sbnz.gleficu.model.phases.*;
import com.sbnz.gleficu.model.*;
import com.sbnz.gleficu.model.enums.*;

    rule "Raspodjela zanrova_5"
        agenda-group "Filter zanrova po polu i godinama"
        no-loop true
        when
            $user: User($ageRange: ageRange, $gender: gender) and
            $g: GenresFilterAgeGenderPhase($genres: genres, ageRange == $ageRange, gender == $gender)
            accumulate (
                $byAgeItem: Integer() from [0, 2, 8, 20, 27, 26];
                $byAgeList: collectSet($byAgeItem)
            )
            accumulate (
                $byGenderItem: Integer() from [3, 5, 8, 20, 17, 15];
                $byGenderList: collectSet($byGenderItem)
            )
            accumulate(
                $genre: Genre($id: id, id memberOf $byAgeList, id memberOf $byGenderList) from $genres;
                $retGenres: collectSet($genre)
            )
        then
            System.out.println("Filter zanrova po polu i godinama - pol: " + $gender.toString() + ", dob: " + $ageRange.toString());
            insert(new GenresFilterByAgeAndGenderFact($retGenres));
    end

    rule "Raspodjela zanrova_4"
        agenda-group "Filter zanrova po polu i godinama"
        no-loop true
        when
            $user: User($ageRange: ageRange, $gender: gender) and
            $g: GenresFilterAgeGenderPhase($genres: genres, ageRange == $ageRange, gender == $gender)
            accumulate (
                $byAgeItem: Integer() from [0, 2, 8, 20, 27, 26];
                $byAgeList: collectSet($byAgeItem)
            )
            accumulate (
                $byGenderItem: Integer() from [0, 2, 10, 21, 14, 25, 27, 26];
                $byGenderList: collectSet($byGenderItem)
            )
            accumulate(
                $genre: Genre($id: id, id memberOf $byAgeList, id memberOf $byGenderList) from $genres;
                $retGenres: collectSet($genre)
            )
        then
            System.out.println("Filter zanrova po polu i godinama - pol: " + $gender.toString() + ", dob: " + $ageRange.toString());
            insert(new GenresFilterByAgeAndGenderFact($retGenres));
    end

    rule "Raspodjela zanrova_3"
        agenda-group "Filter zanrova po polu i godinama"
        no-loop true
        when
            $user: User($ageRange: ageRange, $gender: gender) and
            $g: GenresFilterAgeGenderPhase($genres: genres, ageRange == $ageRange, gender == $gender)
            accumulate (
                $byAgeItem: Integer() from [0, 2, 25, 17, 6, 5, 9, 3];
                $byAgeList: collectSet($byAgeItem)
            )
            accumulate (
                $byGenderItem: Integer() from [3, 5, 8, 20, 17, 15];
                $byGenderList: collectSet($byGenderItem)
            )
            accumulate(
                $genre: Genre($id: id, id memberOf $byAgeList, id memberOf $byGenderList) from $genres;
                $retGenres: collectSet($genre)
            )
        then
            System.out.println("Filter zanrova po polu i godinama - pol: " + $gender.toString() + ", dob: " + $ageRange.toString());
            insert(new GenresFilterByAgeAndGenderFact($retGenres));
    end

    rule "Raspodjela zanrova_2"
        agenda-group "Filter zanrova po polu i godinama"
        no-loop true
        when
            $user: User($ageRange: ageRange, $gender: gender) and
            $g: GenresFilterAgeGenderPhase($genres: genres, ageRange == $ageRange, gender == $gender)
            accumulate (
                $byAgeItem: Integer() from [0, 2, 25, 17, 6, 5, 9, 3];
                $byAgeList: collectSet($byAgeItem)
            )
            accumulate (
                $byGenderItem: Integer() from [0, 2, 10, 21, 14, 25, 27, 26];
                $byGenderList: collectSet($byGenderItem)
            )
            accumulate(
                $genre: Genre($id: id, id memberOf $byAgeList, id memberOf $byGenderList) from $genres;
                $retGenres: collectSet($genre)
            )
        then
            System.out.println("Filter zanrova po polu i godinama - pol: " + $gender.toString() + ", dob: " + $ageRange.toString());
            insert(new GenresFilterByAgeAndGenderFact($retGenres));
    end

    rule "Raspodjela zanrova_1"
        agenda-group "Filter zanrova po polu i godinama"
        no-loop true
        when
            $user: User($ageRange: ageRange, $gender: gender) and
            $g: GenresFilterAgeGenderPhase($genres: genres, ageRange == $ageRange, gender == $gender)
            accumulate (
                $byAgeItem: Integer() from [0, 2, 3, 10, 21, 14, 25, 17, 6];
                $byAgeList: collectSet($byAgeItem)
            )
            accumulate (
                $byGenderItem: Integer() from [3, 5, 8, 20, 17, 15];
                $byGenderList: collectSet($byGenderItem)
            )
            accumulate(
                $genre: Genre($id: id, id memberOf $byAgeList, id memberOf $byGenderList) from $genres;
                $retGenres: collectSet($genre)
            )
        then
            System.out.println("Filter zanrova po polu i godinama - pol: " + $gender.toString() + ", dob: " + $ageRange.toString());
            insert(new GenresFilterByAgeAndGenderFact($retGenres));
    end

    rule "Raspodjela zanrova_0"
        agenda-group "Filter zanrova po polu i godinama"
        no-loop true
        when
            $user: User($ageRange: ageRange, $gender: gender) and
            $g: GenresFilterAgeGenderPhase($genres: genres, ageRange == $ageRange, gender == $gender)
            accumulate (
                $byAgeItem: Integer() from [0, 2, 3, 10, 21, 14, 25, 17, 6];
                $byAgeList: collectSet($byAgeItem)
            )
            accumulate (
                $byGenderItem: Integer() from [0, 2, 10, 21, 14, 25, 27, 26];
                $byGenderList: collectSet($byGenderItem)
            )
            accumulate(
                $genre: Genre($id: id, id memberOf $byAgeList, id memberOf $byGenderList) from $genres;
                $retGenres: collectSet($genre)
            )
        then
            System.out.println("Filter zanrova po polu i godinama - pol: " + $gender.toString() + ", dob: " + $ageRange.toString());
            insert(new GenresFilterByAgeAndGenderFact($retGenres));
    end


